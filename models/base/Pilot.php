<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "pilots".
 *
 * @property integer $id
 * @property integer $person_id
 * @property integer $contest_id
 * @property integer $gnz_id
 * @property string $rego
 * @property string $rego_short
 * @property string $entry_date
 * @property string $trailer
 * @property string $plate
 * @property string $crew
 * @property string $crew_phone
 *
 * @property \app\models\Landout[] $landouts
 * @property \app\models\Launch[] $launches
 * @property \app\models\Contest $contest
 * @property \app\models\Person $person
 * @property \app\models\Retrieve[] $retrieves
 * @property \app\models\Transaction[] $transactions
 * @property string $aliasModel
 */
abstract class Pilot extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'pilots';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['person_id', 'contest_id'], 'required'],
            [['person_id', 'contest_id', 'gnz_id'], 'integer'],
            [['entry_date'], 'safe'],
            [['rego'], 'string', 'max' => 6],
            [['rego_short'], 'string', 'max' => 2],
            [['trailer', 'crew'], 'string', 'max' => 80],
            [['plate'], 'string', 'max' => 20],
            [['crew_phone'], 'string', 'max' => 16],
            [['contest_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Contest::class, 'targetAttribute' => ['contest_id' => 'id']],
            [['person_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Person::class, 'targetAttribute' => ['person_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'person_id' => 'Pilot ID',
            'contest_id' => 'Contest ID',
            'gnz_id' => 'GNZ Pilot ID',
            'rego' => 'Glider Registration',
            'rego_short' => 'Glider Contest ID',
            'entry_date' => 'Entry Date',
            'trailer' => 'Car & Trailer',
            'plate' => 'Car Plate',
            'crew' => 'Crew Name',
            'crew_phone' => 'Crew Phone',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLandouts()
    {
        return $this->hasMany(\app\models\Landout::class, ['pilot_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLaunches()
    {
        return $this->hasMany(\app\models\Launch::class, ['pilot_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContest()
    {
        return $this->hasOne(\app\models\Contest::class, ['id' => 'contest_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPerson()
    {
        return $this->hasOne(\app\models\Person::class, ['id' => 'person_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRetrieves()
    {
        return $this->hasMany(\app\models\Retrieve::class, ['pilot_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransactions()
    {
        return $this->hasMany(\app\models\Transaction::class, ['person_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\PilotQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\PilotQuery(get_called_class());
    }


}
